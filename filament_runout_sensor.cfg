#####################################################################
# Pause after distance macro
#####################################################################
# From https://klipper.discourse.group/t/feature-request-filament-runout-trigger-pause-after-700mm-extruded-distance-delay/5586/3
[gcode_macro PAUSE_AFTER_D]
description: Trigger to pause the print after a further 'd' mm has been extruded
variable_end_d: 0 #create variable "END_D" which is associated with the PAUSE_AFTER_D gcode macro
gcode:
  {% set d_start = printer.print_stats.filament_used|float %} #starting point is whatever the filament used is when PAUSE_AFTER_D is called
  {% set d_end = (d_start + params.D|float)|float %} #end point is start + D parameter
  SET_GCODE_VARIABLE MACRO=PAUSE_AFTER_D VARIABLE=end_d VALUE={d_end} #write the end value to the END_D gcode variable to access later
  M117 Pause at {printer["gcode_macro PAUSE_AFTER_D"].end_d|round(2)}
  UPDATE_DELAYED_GCODE ID=PAUSE_AT_D DURATION=1 #trigger the delayed gcode below after 1 second

[delayed_gcode PAUSE_AT_D]
initial_duration: 0 #if initial_duration is zero, the delayed gcode won't start by default
gcode:
  {% set d_current = printer.print_stats.filament_used|float %} #get the current filament used
  {% if d_current < printer["gcode_macro PAUSE_AFTER_D"].end_d %} #if we aren't at the stopping point
    M117 Stopping {d_current|round(2)} {printer["gcode_macro PAUSE_AFTER_D"].end_d|round(2)}
    UPDATE_DELAYED_GCODE ID=PAUSE_AT_D DURATION=1 #restart the timer on the delayed gcode
  {% else %}
    PAUSE
    UPDATE_DELAYED_GCODE ID=PAUSE_AT_D DURATION=0 #set the delayed gcode duration back to zero so it doesn't keep triggering
  {% endif %}

#####################################################################
# 	RefillPlease - Filament Runout Sensor
#####################################################################
# from https://github.com/VoronDesign/VoronUsers/blob/main/printer_mods/JD/RefillPlease/klipper/filament_runout_detection.cfg
[filament_switch_sensor RunoutSensor]
switch_pin: !PG12 # Pin ESTOP4 for Octopus mcu

# Without M600 macro (uncomment the line below and comment the two lines in the "With Filament change M600 macro"
# pause_on_runout: true

# With M600 Filament change macro
pause_on_runout: false
runout_gcode:
  PAUSE_AFTER_D D=800
#####################################################################
# 	Filament change macro M600
#####################################################################

# [gcode_macro M600]
# variable_park_x: 220
# variable_park_y: 10
# variable_z_lift: 20
# variable_velocity: 60
# variable_retract: 1
# gcode:
#     SAVE_GCODE_STATE NAME=STATE_M600
    
#     # remembers the position
#     # fluidd annoyingly redefines this macro to retract and park the toolhead at the rear
#     PAUSE  
    
#     # safe park coords
#     {% set th = printer.toolhead %}
#     {% set park_x = [params.X|default(park_x)|int, th.axis_maximum.x-2]|min %}
#     {% set park_y = [params.Y|default(park_y)|int, th.axis_maximum.y-10]|min %}
#     {% set park_z = [th.position.z + params.Z_LIFT|default(z_lift)|int, th.axis_maximum.z]|min %}
#     {% set park_feedrate = params.VELOCITY|default(velocity)|int * 60 %}
    
#     # retract at 50mm/sec
#     G91
#     G1 E-{retract} F3000
    
#     # park toolhead
#     G90
#     G0 X{park_x} Y{park_y} Z{park_z} F{park_feedrate}
    
#     # unload 60mm of filament
#     G91
#     G1 E-50 F3600
#     G1 E-10 F3600
    
#     # ask the waiter for a refill
#     M117 Refill please
    
#     RESTORE_GCODE_STATE NAME=STATE_M600